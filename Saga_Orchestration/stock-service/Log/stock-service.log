[INFO ] 2019-08-28 16:22:28.526 [restartedMain] StockServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-28 16:24:37.317 [restartedMain] StockServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-28 16:24:43.263 [restartedMain] StockServiceApplication - Started StockServiceApplication in 8.703 seconds (JVM running for 9.634)
[INFO ] 2019-08-28 16:26:30.097 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"custId":2,"itemList":["a","b","c"]}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-8PaIYHdBLtLd2ijFal1Xew, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:26:30.121 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=0, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=null, action=null, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:26:30.121 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock orderRequest = OrderRequest(orderId=0, custId=2, itemList=[a, b, c], orderStatus=01, totalPrice=0, systemDeliveryNo=null, action=null, stockRespCode=01, stockRespDesc=STOCK_REVERTED, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:30:49.821 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"custId":2,"itemList":["a","b","c"]}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-8PaIYHdBLtLd2ijFal1Xew, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:30:49.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=0, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=null, action=null, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:30:49.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock orderRequest = OrderRequest(orderId=0, custId=2, itemList=[a, b, c], orderStatus=01, totalPrice=0, systemDeliveryNo=null, action=null, stockRespCode=01, stockRespDesc=STOCK_REVERTED, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:37:19.109 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"custId":2,"itemList":["a","b","c"]}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-8PaIYHdBLtLd2ijFal1Xew, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:37:19.110 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=0, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=null, action=null, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:37:19.111 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock orderRequest = OrderRequest(orderId=0, custId=2, itemList=[a, b, c], orderStatus=01, totalPrice=0, systemDeliveryNo=null, action=null, stockRespCode=01, stockRespDesc=STOCK_REVERTED, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:49:15.156 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-8PaIYHdBLtLd2ijFal1Xew, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:49:15.159 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:49:15.160 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:51:40.057 [restartedMain] StockServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-28 16:51:46.080 [restartedMain] StockServiceApplication - Started StockServiceApplication in 8.805 seconds (JVM running for 9.788)
[INFO ] 2019-08-28 16:51:48.784 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":2,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-CRyz46cAzb9WCZdpO7sKSA, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:51:48.796 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=2, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:51:48.796 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=2, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:54:27.530 [restartedMain] StockServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-28 16:54:30.938 [restartedMain] StockServiceApplication - Started StockServiceApplication in 5.691 seconds (JVM running for 174.646)
[INFO ] 2019-08-28 16:54:49.755 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":3,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:54:49.758 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=3, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:54:49.758 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=3, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:56:09.569 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:56:09.571 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:56:09.571 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:57:41.237 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:57:41.239 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:57:41.239 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:58:28.564 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:58:28.566 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:58:28.566 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:59:11.723 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 16:59:11.726 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:59:11.726 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:00:33.898 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 17:00:33.901 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:00:33.901 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:02:37.854 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 17:02:37.857 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:02:37.857 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:04:59.482 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 17:04:59.484 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:04:59.484 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:11.661 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 17:06:11.665 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:11.665 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:27.163 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":2,"custId":1,"itemList":["a","b","c"],"orderStatus":null,"totalPrice":0,"systemDeliveryNo":0,"action":"BLOCK_STOCK","stockRespCode":null,"stockRespDesc":null,"paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.order.orderservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 17:06:27.165 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=2, custId=1, itemList=[a, b, c], orderStatus=null, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=null, stockRespDesc=null, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:27.165 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock orderRequest = OrderRequest(orderId=2, custId=1, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:27.171 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":2,"custId":1,"itemList":["a","b","c"],"orderStatus":"01","totalPrice":9933,"systemDeliveryNo":"0","action":"REVERT_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":"01","paymentRespDesc":"INSUFFCIENT_BALANCE","deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.payment.paymentservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-jF3us3SSZlF2TF8tlphZBw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-28 17:06:27.173 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=2, custId=1, itemList=[a, b, c], orderStatus=01, totalPrice=9933, systemDeliveryNo=0, action=REVERT_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=01, paymentRespDesc=INSUFFCIENT_BALANCE, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:27.173 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock orderRequest = OrderRequest(orderId=2, custId=1, itemList=[a, b, c], orderStatus=01, totalPrice=9933, systemDeliveryNo=0, action=REVERT_STOCK, stockRespCode=01, stockRespDesc=STOCK_REVERTED, paymentRespCode=01, paymentRespDesc=INSUFFCIENT_BALANCE, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-29 11:25:32.585 [restartedMain] StockServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 11:25:40.651 [restartedMain] StockServiceApplication - Started StockServiceApplication in 11.093 seconds (JVM running for 12.319)
[INFO ] 2019-08-29 11:33:54.124 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=1, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:33:54.134 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=1, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:33:54.135 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:33:54.139 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=1, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:03.187 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":2,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=2, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:03.189 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=2, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:03.189 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:03.189 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=2, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:03.201 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":2,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=3, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:03.203 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=2, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:03.203 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:03.203 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=3, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:13.013 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":3,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=4, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:13.015 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=3, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:13.015 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:13.015 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=4, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:13.027 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":3,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=5, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:13.028 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=3, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:13.028 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:13.029 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=5, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:13.742 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":4,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=6, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:13.743 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=4, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:13.743 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:13.744 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=6, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:13.755 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":4,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=7, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:13.756 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=4, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:13.756 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:13.757 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=7, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:14.348 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":5,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=8, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:14.349 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=5, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:14.350 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:14.350 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=8, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:14.362 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":5,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=9, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:14.364 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=5, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:14.364 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:14.364 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=9, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:14.956 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":6,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=10, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:14.957 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=6, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:14.958 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:14.958 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=10, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:14.970 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":6,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=11, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:14.971 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=6, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:14.971 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:14.972 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=11, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:15.587 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":7,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=12, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:15.588 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=7, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:15.589 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:15.589 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=12, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:15.601 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":7,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=13, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:15.602 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=7, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:15.602 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:15.602 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=13, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:16.229 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":8,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=14, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:16.230 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=8, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:16.231 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:16.231 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=14, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:16.240 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":8,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=15, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:16.241 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=8, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:16.241 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:16.242 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=15, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:26.087 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":9,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=16, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:26.089 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=9, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:26.089 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:26.090 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=16, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:46.806 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":10,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=17, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:46.808 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=10, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:46.808 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:46.808 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=17, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:46.819 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":10,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=18, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:46.821 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=10, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:46.821 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:46.821 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=18, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:49.334 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":11,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=19, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:49.335 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=11, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:49.335 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:49.336 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=19, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:49.345 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":11,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=20, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:49.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=11, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:49.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:49.347 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=20, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:49.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":12,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=21, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:49.733 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=12, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:49.733 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:49.733 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=21, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:49.744 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":12,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=22, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:49.745 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=12, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:49.745 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:49.746 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=22, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.051 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":13,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=23, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.052 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=13, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:50.053 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:50.053 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=23, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.062 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":13,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=24, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.063 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=13, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:50.063 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:50.064 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=24, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.324 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":14,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=25, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.325 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=14, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:50.325 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:50.326 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=25, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.337 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":14,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=26, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.338 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=14, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:50.338 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:50.338 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=26, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.595 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":15,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=27, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.596 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=15, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:50.596 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:50.597 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=27, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.606 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":15,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=28, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.608 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=15, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:50.608 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:50.608 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=28, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.851 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":16,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=29, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=16, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:50.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:50.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=29, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.866 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":16,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=30, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.867 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=16, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:50.867 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:50.868 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=30, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.995 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":17,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=31, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:50.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=17, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:50.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:50.997 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=31, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.006 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":17,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=32, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.007 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=17, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:51.007 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:51.007 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=32, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.170 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":18,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=33, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.171 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=18, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:51.171 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:51.171 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=33, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.180 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":18,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=34, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.181 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=18, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:51.181 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:51.182 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=34, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.348 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":19,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=35, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.349 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=19, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:51.349 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:51.350 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=35, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.358 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":19,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=36, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.359 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=19, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:51.359 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:51.360 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=36, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.539 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":20,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=37, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.540 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=20, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:51.540 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:51.541 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=37, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.553 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":20,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=38, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.554 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=20, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:51.554 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:51.555 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=38, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.735 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":21,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=39, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.736 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=21, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:51.736 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:51.737 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=39, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.745 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":21,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=40, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.747 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=21, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:51.747 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:51.748 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=40, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.934 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":22,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=41, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.935 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=22, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:51.935 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:51.935 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=41, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.946 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":22,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=42, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:51.947 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=22, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:51.947 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:51.948 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=42, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.074 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":23,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=43, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.075 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=23, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:52.075 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:52.076 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=43, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.084 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":23,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=44, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.085 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=23, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:52.085 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:52.086 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=44, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.227 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":24,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=45, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=24, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:52.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:52.229 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=45, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.238 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":24,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=46, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.239 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=24, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:52.239 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:52.240 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=46, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.407 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":25,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=47, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.408 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=25, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:52.408 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:52.409 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=47, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.433 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":25,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=48, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.434 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=25, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:52.434 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:52.435 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=48, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.571 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":26,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=49, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.572 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=26, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:52.572 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:52.573 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=49, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.582 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":26,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=50, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.583 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=26, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:52.583 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:52.584 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=50, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.731 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":27,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=51, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=51, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=27, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:52.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:52.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=51, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=51, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.761 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":27,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=52, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=52, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=27, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:52.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:52.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=52, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=52, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.904 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":28,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=53, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=53, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.905 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=28, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:52.905 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:52.905 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=53, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=53, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.913 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":28,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=54, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=54, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:52.914 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=28, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:52.914 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:52.914 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=54, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=54, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.058 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":29,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=55, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=55, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.059 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=29, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:53.059 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:53.060 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=55, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=55, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.087 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":29,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=56, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=56, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.088 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=29, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:53.088 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:53.089 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=56, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=56, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.217 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":30,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=57, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=57, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.218 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=30, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:53.218 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:53.219 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=57, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=57, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.227 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":30,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=58, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=58, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=30, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:53.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:53.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=58, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=58, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.562 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":31,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=59, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=59, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.563 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=31, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:53.563 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:53.564 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=59, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=59, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.573 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":31,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=60, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=60, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.574 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=31, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:53.574 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:53.574 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=60, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=60, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.731 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":32,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=61, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=61, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=32, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:53.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:53.733 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=61, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=61, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.743 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":32,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=62, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=62, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.744 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=32, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:53.744 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:53.744 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=62, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=62, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.916 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":33,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=63, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=63, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=33, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:53.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:53.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=63, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=63, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.926 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":33,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=64, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=64, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:53.927 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=33, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:53.927 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:53.927 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=64, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=64, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.091 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":34,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=65, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=65, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.091 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=34, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:54.092 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:54.092 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=65, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=65, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.102 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":34,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=66, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=66, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.103 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=34, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:54.103 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:54.103 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=66, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=66, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.260 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":35,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=67, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=67, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.261 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=35, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:54.261 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:54.262 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=67, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=67, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.270 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":35,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=68, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=68, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.271 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=35, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:54.271 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:54.272 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=68, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=68, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.428 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":36,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=69, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=69, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.429 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=36, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:54.429 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:54.430 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=69, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=69, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.459 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":36,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=70, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=70, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.460 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=36, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:54.460 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:54.460 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=70, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=70, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.611 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":37,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=71, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=71, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.612 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=37, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:54.612 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:54.612 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=71, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=71, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.622 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":37,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=72, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=72, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.623 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=37, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:54.623 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:54.624 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=72, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=72, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.787 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":38,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=73, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=73, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.787 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=38, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:54.787 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:54.788 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=73, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=73, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.815 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":38,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=74, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=74, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.816 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=38, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:54.816 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:54.816 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=74, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=74, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.965 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":39,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=75, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=75, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.965 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=39, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:54.966 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:54.966 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=75, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=75, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":39,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=76, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=76, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:54.997 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=39, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:54.997 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:54.997 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=76, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=76, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.130 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":40,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=77, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=77, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.131 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=40, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:55.131 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:55.131 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=77, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=77, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.139 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":40,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=78, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=78, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.140 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=40, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:55.140 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:55.141 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=78, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=78, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.306 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":41,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=79, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=79, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.307 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=41, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:55.307 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:55.307 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=79, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=79, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.318 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":41,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=80, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=80, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.318 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=41, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:55.318 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:55.319 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=80, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=80, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.458 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":42,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=81, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=81, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.458 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=42, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:55.458 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:55.459 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=81, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=81, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.467 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":42,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=82, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=82, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=42, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:55.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:55.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=82, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=82, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.635 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":43,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=83, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=83, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.636 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=43, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:55.636 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:55.636 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=83, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=83, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.646 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":43,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=84, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=84, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.647 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=43, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:55.647 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:55.647 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=84, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=84, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.793 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":44,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=85, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=85, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.795 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=44, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:55.795 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:55.795 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=85, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=85, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.802 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":44,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=86, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=86, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.803 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=44, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:55.803 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:55.804 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=86, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=86, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.979 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":45,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=87, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=87, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.979 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=45, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:55.979 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:55.980 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=87, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=87, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.987 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":45,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=88, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=88, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:55.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=45, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:55.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:55.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=88, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=88, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.147 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":46,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=89, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=89, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.148 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=46, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:56.148 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:56.148 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=89, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=89, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.171 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":46,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=90, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=90, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.172 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=46, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:56.172 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:56.172 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=90, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=90, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.314 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":47,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=91, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=91, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.315 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=47, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:56.315 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:56.315 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=91, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=91, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.328 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":47,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=92, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=92, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.328 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=47, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:56.328 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:56.329 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=92, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=92, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.473 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":48,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=93, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=93, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.474 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=48, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:56.474 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:56.474 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=93, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=93, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.482 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":48,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=94, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=94, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.483 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=48, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:56.483 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:56.483 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=94, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=94, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.650 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":49,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=95, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=95, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.651 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=49, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:56.651 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:56.651 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=95, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=95, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.659 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":49,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=96, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=96, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.660 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=49, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:56.661 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:56.661 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=96, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=96, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.810 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":50,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=97, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=97, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.811 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=50, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:56.812 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:56.812 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=97, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=97, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.852 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":50,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=98, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=98, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=50, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:56.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:56.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=98, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=98, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.987 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":51,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=99, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=99, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=51, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:56.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:56.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=99, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=99, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":51,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=100, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=100, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:56.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=51, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:56.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:56.997 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=100, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=100, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.162 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":52,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=101, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=101, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.163 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=52, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:57.163 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:57.164 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=101, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=101, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.171 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":52,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=102, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=102, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.172 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=52, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:57.172 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:57.173 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=102, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=102, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":53,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=103, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=103, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=53, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:57.347 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:57.347 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=103, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=103, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.356 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":53,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=104, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=104, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.357 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=53, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:57.357 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:57.358 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=104, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=104, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.514 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":54,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=105, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=105, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.514 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=54, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:57.515 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:57.515 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=105, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=105, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.525 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":54,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=106, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=106, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.526 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=54, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:57.526 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:57.526 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=106, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=106, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.698 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":55,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=107, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=107, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.699 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=55, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:57.699 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:57.699 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=107, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=107, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":55,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=108, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=108, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=55, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:57.763 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:57.763 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=108, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=108, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.867 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":56,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=109, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=109, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.867 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=56, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:57.867 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:57.868 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=109, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=109, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.892 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":56,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=110, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=110, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:57.893 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=56, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:57.893 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:57.894 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=110, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=110, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:58.019 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":57,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=111, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=111, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:58.020 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=57, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:58.020 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:58.020 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=111, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=111, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:58.148 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":57,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=112, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=112, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:58.149 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=57, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:58.149 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:58.150 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=112, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=112, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:58.195 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":58,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=113, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=113, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:58.196 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=58, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:58.196 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:58.197 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=113, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=113, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:58.238 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":58,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=114, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=114, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:58.238 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=58, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:34:58.238 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:34:58.239 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=114, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=114, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:59.987 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":59,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=115, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=115, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:34:59.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=59, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:34:59.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:34:59.989 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=115, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=115, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:29.983 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":60,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=116, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=116, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:29.984 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=60, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:29.984 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:29.984 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=116, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=116, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:30.011 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":60,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=117, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=117, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:30.012 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=60, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:30.012 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:30.012 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=117, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=117, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.578 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":61,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=118, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=118, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.579 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=61, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:35.579 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:35.579 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=118, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=118, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.588 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":61,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=119, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=119, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.589 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=61, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:35.589 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:35.589 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=119, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=119, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.770 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":62,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=120, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=120, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.770 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=62, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:35.770 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:35.771 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=120, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=120, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.785 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":62,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=121, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=121, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.785 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=62, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:35.786 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:35.786 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=121, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=121, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.897 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":63,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=122, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=122, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.898 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=63, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:35.898 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:35.899 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=122, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=122, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.912 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":63,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=123, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=123, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:35.913 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=63, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:35.913 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:35.913 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=123, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=123, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.074 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":64,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=124, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=124, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.075 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=64, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:36.075 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:36.076 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=124, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=124, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.085 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":64,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=125, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=125, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.086 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=64, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:36.086 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:36.087 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=125, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=125, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.226 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":65,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=126, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=126, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=65, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:36.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:36.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=126, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=126, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.236 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":65,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=127, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=127, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.238 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=65, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:36.238 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:36.238 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=127, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=127, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.386 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":66,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=128, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=128, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.387 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=66, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:36.387 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:36.388 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=128, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=128, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.395 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":66,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=129, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=129, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.396 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=66, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:36.396 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:36.396 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=129, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=129, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.538 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":67,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=130, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=130, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.539 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=67, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:36.539 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:36.539 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=130, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=130, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.545 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":67,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=131, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=131, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.546 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=67, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:36.546 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:36.547 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=131, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=131, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.698 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":68,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=132, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=132, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.699 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=68, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:36.699 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:36.699 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=132, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=132, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.705 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":68,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=133, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=133, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.706 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=68, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:36.706 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:36.706 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=133, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=133, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.865 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":69,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=134, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=134, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.866 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=69, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:36.866 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:36.866 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=134, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=134, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.873 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":69,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=135, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=135, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:36.874 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=69, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:36.874 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:36.874 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=135, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=135, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.018 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":70,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=136, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=136, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.018 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=70, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:37.018 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:37.019 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=136, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=136, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.038 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":70,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=137, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=137, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.039 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=70, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:37.039 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:37.039 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=137, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=137, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.177 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":71,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=138, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=138, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.178 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=71, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:37.178 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:37.178 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=138, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=138, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.185 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":71,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=139, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=139, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.186 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=71, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:37.186 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:37.186 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=139, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=139, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.345 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":72,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=140, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=140, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=72, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:37.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:37.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=140, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=140, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.373 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":72,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=141, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=141, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.373 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=72, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:37.373 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:37.374 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=141, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=141, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.496 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":73,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=142, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=142, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.497 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=73, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:37.497 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:37.497 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=142, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=142, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.507 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":73,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=143, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=143, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.508 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=73, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:37.508 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:37.508 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=143, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=143, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.658 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":74,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=144, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=144, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.658 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=74, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:37.658 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:37.659 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=144, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=144, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.678 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":74,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=145, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=145, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.679 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=74, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:37.679 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:37.679 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=145, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=145, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.825 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":75,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=146, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=146, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.826 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=75, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:37.826 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:37.826 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=146, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=146, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.852 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":75,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=147, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=147, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=75, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:37.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:37.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=147, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=147, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.987 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":76,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=148, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=148, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.987 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=76, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:37.987 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:37.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=148, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=148, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.995 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":76,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=149, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=149, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:37.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=76, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:37.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:37.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=149, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=149, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.154 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":77,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=150, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=150, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.154 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=77, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:38.154 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:38.155 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=150, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=150, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.161 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":77,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=151, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=151, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.162 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=77, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:38.162 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:38.162 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=151, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=151, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.315 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":78,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=152, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=152, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.315 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=78, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:38.315 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:38.316 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=152, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=152, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.323 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":78,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=153, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=153, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.324 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=78, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:38.324 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:38.324 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=153, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=153, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.501 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":79,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=154, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=154, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.502 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=79, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:38.502 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:38.503 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=154, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=154, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.510 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":79,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=155, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=155, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.511 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=79, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:38.511 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:38.511 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=155, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=155, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.633 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":80,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=156, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=156, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.633 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=80, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:38.633 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:38.634 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=156, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=156, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.641 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":80,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=157, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=157, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.642 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=80, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:38.642 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:38.642 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=157, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=157, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.792 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":81,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=158, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=158, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.793 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=81, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:38.793 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:38.794 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=158, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=158, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.800 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":81,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=159, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=159, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.801 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=81, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:38.801 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:38.802 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=159, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=159, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.939 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":82,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=160, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=160, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.940 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=82, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:38.940 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:38.940 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=160, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=160, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.948 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":82,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=161, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=161, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:38.949 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=82, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:38.949 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:38.949 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=161, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=161, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:39.080 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":83,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=162, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=162, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:39.081 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=83, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:39.081 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:39.081 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=162, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=162, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:39.089 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":83,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=163, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=163, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:39.089 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=83, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:36:39.089 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:36:39.090 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=163, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=163, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:41.146 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":84,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=164, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=164, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:36:41.147 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=84, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:36:41.147 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:36:41.147 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=164, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=164, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:11.661 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":85,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=165, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=165, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:11.662 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=85, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:11.662 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:11.662 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=165, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=165, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:15.765 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":86,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=166, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=166, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:15.766 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=86, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:15.766 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:15.766 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=166, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=166, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:15.774 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":86,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=167, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=167, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:15.775 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=86, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:15.775 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:15.775 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=167, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=167, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.239 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":87,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=168, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=168, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.240 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=87, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:16.240 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:16.241 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=168, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=168, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.248 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":87,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=169, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=169, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.249 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=87, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:16.249 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:16.249 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=169, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=169, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.316 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":88,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=170, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=170, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.317 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=88, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:16.317 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:16.318 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=170, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=170, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.472 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":88,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=171, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=171, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.473 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=88, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:16.473 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:16.474 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=171, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=171, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.478 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":89,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=172, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=172, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=89, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:16.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:16.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=172, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=172, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.505 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":89,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=173, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=173, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.505 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=89, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:16.505 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:16.506 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=173, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=173, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.634 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":90,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=174, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=174, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.635 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=90, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:16.635 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:16.636 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=174, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=174, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.657 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":90,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=175, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=175, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.658 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=90, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:16.658 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:16.659 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=175, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=175, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.805 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":91,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=176, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=176, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.806 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=91, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:16.806 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:16.807 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=176, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=176, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.815 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":91,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=177, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=177, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.815 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=91, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:16.816 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:16.816 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=177, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=177, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.962 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":92,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=178, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=178, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.963 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=92, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:16.963 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:16.963 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=178, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=178, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.971 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":92,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=179, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=179, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:16.972 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=92, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:16.972 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:16.972 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=179, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=179, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.129 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":93,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=180, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=180, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.130 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=93, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:17.130 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:17.130 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=180, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=180, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.141 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":93,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=181, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=181, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.142 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=93, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:17.142 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:17.142 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=181, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=181, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.307 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":94,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=182, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=182, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.308 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=94, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:17.308 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:17.308 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=182, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=182, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.326 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":94,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=183, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=183, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.327 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=94, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:17.327 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:17.327 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=183, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=183, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.505 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":95,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=184, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=184, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.506 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=95, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:17.506 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:17.506 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=184, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=184, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.514 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":95,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=185, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=185, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.514 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=95, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:17.515 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:17.515 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=185, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=185, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.675 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":96,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=186, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=186, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.676 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=96, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:17.676 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:17.676 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=186, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=186, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.684 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":96,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=187, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=187, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.685 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=96, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:17.685 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:17.685 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=187, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=187, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.834 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":97,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=188, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=188, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.835 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=97, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:17.835 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:17.835 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=188, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=188, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":97,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=189, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=189, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:17.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=97, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:17.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:17.854 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=189, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=189, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.002 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":98,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=190, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=190, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.003 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=98, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:18.003 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:18.003 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=190, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=190, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.011 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":98,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=191, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=191, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.012 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=98, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:18.012 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:18.013 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=191, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=191, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.194 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":99,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=192, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=192, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.195 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=99, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:18.195 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:18.195 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=192, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=192, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.203 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":99,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=193, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=193, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.204 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=99, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:18.204 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:18.204 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=193, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=193, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.340 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":100,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=194, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=194, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=100, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:18.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:18.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=194, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=194, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.350 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":100,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=195, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=195, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.351 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=100, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:18.351 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:18.351 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=195, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=195, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.681 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":101,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=196, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=196, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.682 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=101, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:18.682 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:18.682 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=196, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=196, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.688 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":101,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=197, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=197, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.689 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=101, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:18.689 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:18.689 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=197, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=197, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.841 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":102,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=198, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=198, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.841 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=102, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:18.842 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:18.842 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=198, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=198, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.849 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":102,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=199, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=199, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:18.850 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=102, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:18.850 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:18.850 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=199, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=199, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.010 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":103,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=200, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=200, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.011 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=103, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:19.011 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:19.011 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=200, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=200, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.030 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":103,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=201, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=201, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.031 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=103, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:19.031 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:19.032 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=201, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=201, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.211 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":104,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=202, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=202, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.211 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=104, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:19.212 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:19.212 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=202, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=202, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.222 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":104,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=203, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=203, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.223 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=104, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:19.223 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:19.223 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=203, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=203, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.354 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":105,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=204, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=204, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.355 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=105, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:19.355 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:19.355 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=204, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=204, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.367 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":105,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=205, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=205, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.368 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=105, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:19.368 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:19.368 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=205, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=205, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.532 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":106,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=206, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=206, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.533 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=106, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:19.533 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:19.533 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=206, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=206, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.546 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":106,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=207, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=207, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.547 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=106, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:19.547 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:19.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=207, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=207, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.682 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":107,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=208, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=208, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.683 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=107, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:19.683 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:19.683 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=208, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=208, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.690 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":107,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=209, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=209, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.691 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=107, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:19.691 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:19.691 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=209, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=209, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.871 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":108,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=210, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=210, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.871 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=108, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:19.871 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:19.872 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=210, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=210, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.880 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":108,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=211, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=211, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:19.880 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=108, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:19.880 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:19.881 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=211, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=211, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.009 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":109,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=212, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=212, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.010 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=109, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:20.010 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:20.010 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=212, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=212, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.040 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":109,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=213, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=213, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.041 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=109, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:20.041 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:20.041 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=213, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=213, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.153 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":110,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=214, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=214, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.153 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=110, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:20.153 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:20.154 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=214, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=214, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.163 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":110,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=215, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=215, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.163 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=110, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:20.163 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:20.164 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=215, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=215, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.305 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":111,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=216, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=216, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.305 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=111, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:20.306 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:20.306 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=216, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=216, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.320 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":111,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=217, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=217, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:20.321 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=111, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 11:41:20.321 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 11:41:20.321 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=217, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=217, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:24.465 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":112,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=218, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=218, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 11:41:24.466 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=112, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 11:41:24.466 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 11:41:24.466 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=218, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=218, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:12:58.402 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":113,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=219, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=219, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:12:58.403 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=113, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:12:58.403 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:12:58.404 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=219, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=219, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:13:24.246 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":114,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=220, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=220, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:13:24.247 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=114, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:13:24.247 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:13:24.247 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=220, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=220, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:12.592 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":115,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=221, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=221, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:12.593 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=115, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:12.593 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:12.594 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=221, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=221, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:13.054 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":115,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=222, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=222, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:13.055 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=115, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:13.055 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:13.055 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=222, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=222, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:17.437 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":116,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=223, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=223, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:17.438 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=116, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:17.438 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:17.439 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=223, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=223, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:17.450 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":116,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=224, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=224, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:17.451 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=116, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:17.451 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:17.451 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=224, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=224, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:17.876 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":117,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=225, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=225, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:17.877 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=117, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:17.877 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:17.877 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=225, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=225, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:17.887 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":117,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=226, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=226, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:17.887 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=117, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:17.887 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:17.888 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=226, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=226, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.075 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":118,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=227, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=227, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.076 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=118, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:18.076 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:18.076 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=227, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=227, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.100 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":118,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=228, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=228, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.101 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=118, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:18.101 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:18.101 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=228, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=228, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.252 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":119,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=229, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=229, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.253 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=119, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:18.253 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:18.253 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=229, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=229, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.264 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":119,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=230, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=230, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.265 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=119, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:18.265 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:18.265 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=230, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=230, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.411 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":120,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=231, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=231, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.412 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=120, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:18.412 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:18.412 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=231, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=231, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.430 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":120,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=232, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=232, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.430 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=120, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:18.430 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:18.431 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=232, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=232, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.562 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":121,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=233, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=233, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.563 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=121, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:18.563 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:18.563 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=233, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=233, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.589 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":121,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=234, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=234, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.590 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=121, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:18.590 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:18.590 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=234, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=234, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.731 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":122,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=235, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=235, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=122, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:18.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:18.732 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=235, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=235, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.744 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":122,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=236, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=236, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.745 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=122, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:18.745 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:18.745 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=236, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=236, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.892 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":123,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=237, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=237, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.893 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=123, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:18.893 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:18.893 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=237, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=237, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.917 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":123,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=238, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=238, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:18.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=123, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:18.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:18.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=238, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=238, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.204 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":124,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=239, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=239, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.204 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=124, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:19.204 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:19.204 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=239, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=239, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.212 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":124,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=240, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=240, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.213 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=124, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:19.213 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:19.213 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=240, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=240, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.371 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":125,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=241, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=241, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.372 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=125, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:19.372 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:19.372 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=241, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=241, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.394 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":125,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=242, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=242, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.395 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=125, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:19.395 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:19.395 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=242, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=242, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.542 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":126,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=243, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=243, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.543 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=126, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:19.543 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:19.543 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=243, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=243, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.554 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":126,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=244, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=244, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.555 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=126, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:19.555 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:19.555 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=244, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=244, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.716 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":127,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=245, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=245, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.717 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=127, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:19.717 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:19.717 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=245, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=245, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.726 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":127,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=246, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=246, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.727 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=127, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:19.727 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:19.727 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=246, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=246, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.885 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":128,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=247, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=247, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.886 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=128, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:19.886 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:19.886 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=247, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=247, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.904 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":128,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=248, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=248, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:19.905 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=128, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:19.905 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:19.905 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=248, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=248, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.053 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":129,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=249, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=249, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.054 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=129, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:20.054 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:20.055 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=249, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=249, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.086 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":129,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=250, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=250, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.086 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=129, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:20.086 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:20.087 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=250, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=250, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.228 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":130,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=251, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=251, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.229 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=130, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:20.229 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:20.229 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=251, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=251, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.250 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":130,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=252, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=252, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.250 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=130, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:20.250 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:20.251 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=252, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=252, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.388 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":131,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=253, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=253, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.388 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=131, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:20.389 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:20.389 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=253, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=253, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.400 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":131,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=254, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=254, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.401 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=131, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:20.401 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:20.401 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=254, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=254, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.557 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":132,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=255, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=255, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.558 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=132, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:20.558 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:20.558 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=255, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=255, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.567 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":132,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=256, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=256, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.568 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=132, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:20.568 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:20.568 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=256, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=256, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":133,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=257, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=257, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.763 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=133, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:20.763 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:20.763 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=257, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=257, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.790 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":133,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=258, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=258, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.790 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=133, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:20.790 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:20.791 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=258, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=258, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.899 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":134,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=259, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=259, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.900 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=134, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:20.900 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:20.901 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=259, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=259, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.917 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":134,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=260, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=260, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:20.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=134, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:20.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:20.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=260, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=260, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.059 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":135,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=261, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=261, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.060 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=135, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:21.060 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:21.060 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=261, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=261, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.068 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":135,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=262, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=262, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.069 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=135, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:21.069 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:21.069 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=262, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=262, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.204 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":136,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=263, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=263, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.205 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=136, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:21.205 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:21.205 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=263, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=263, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.212 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":136,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=264, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=264, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.212 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=136, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:21.213 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:21.213 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=264, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=264, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.349 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":137,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=265, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=265, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.350 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=137, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:21.350 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:21.350 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=265, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=265, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.358 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":137,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=266, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=266, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:21.358 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=137, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:21.358 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:21.359 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=266, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=266, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:27.852 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":138,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=267, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=267, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:27.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=138, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:15:27.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:15:27.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=267, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=267, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:27.860 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":138,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=268, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=268, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:15:27.860 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=138, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:15:27.860 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:15:27.861 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=268, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=268, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:16:15.197 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":139,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=269, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=269, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:16:15.198 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=139, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:16:15.198 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:16:15.198 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=269, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=269, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:14.407 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":140,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=270, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=270, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:14.408 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=140, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:14.408 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:14.408 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=270, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=270, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:17.957 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":141,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=271, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=271, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:17.958 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=141, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:17.958 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:17.975 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=271, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=271, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:17.984 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":141,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=272, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=272, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:17.985 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=141, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:17.985 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:17.985 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=272, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=272, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.250 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":142,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=273, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=273, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.251 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=142, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:19.251 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:19.251 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=273, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=273, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.262 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":142,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=274, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=274, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.262 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=142, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:19.262 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:19.263 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=274, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=274, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.643 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":143,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=275, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=275, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.643 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=143, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:19.644 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:19.644 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=275, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=275, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.672 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":143,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=276, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=276, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.673 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=143, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:19.673 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:19.673 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=276, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=276, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.922 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":144,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=277, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=277, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.923 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=144, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:19.923 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:19.923 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=277, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=277, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.931 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":144,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=278, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=278, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:19.932 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=144, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:19.932 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:19.932 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=278, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=278, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.167 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":145,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=279, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=279, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.168 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=145, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:20.168 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:20.169 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=279, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=279, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.197 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":145,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=280, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=280, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.198 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=145, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:20.198 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:20.198 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=280, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=280, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.435 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":146,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=281, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=281, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.436 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=146, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:20.436 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:20.436 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=281, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=281, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.446 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":146,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=282, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=282, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.447 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=146, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:20.447 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:20.447 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=282, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=282, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.684 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":147,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=283, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=283, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.685 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=147, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:20.685 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:20.685 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=283, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=283, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.692 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":147,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=284, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=284, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.693 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=147, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:20.693 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:20.693 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=284, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=284, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.931 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":148,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=285, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=285, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.931 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=148, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:20.931 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:20.932 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=285, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=285, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.938 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":148,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=286, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=286, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:20.939 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=148, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:20.939 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:20.939 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=286, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=286, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":149,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=287, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=287, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=149, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:21.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:21.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=287, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=287, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.210 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":149,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=288, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=288, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.210 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=149, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:21.210 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:21.210 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=288, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=288, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":150,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=289, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=289, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=150, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:21.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:21.469 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=289, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=289, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.503 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":150,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=290, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=290, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.504 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=150, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:21.504 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:21.504 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=290, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=290, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.754 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":151,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=291, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=291, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.755 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=151, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:21.755 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:21.755 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=291, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=291, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":151,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=292, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=292, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:21.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=151, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:21.762 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:21.763 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=292, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=292, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.131 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":152,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=293, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=293, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.131 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=152, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:22.132 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:22.132 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=293, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=293, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.139 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":152,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=294, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=294, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.139 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=152, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:22.140 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:22.140 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=294, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=294, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.491 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":153,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=295, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=295, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.491 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=153, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:22.491 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:22.492 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=295, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=295, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.499 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":153,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=296, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=296, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.499 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=153, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:22.499 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:22.500 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=296, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=296, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.859 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":154,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=297, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=297, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.859 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=154, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:22.859 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:22.860 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=297, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=297, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.896 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":154,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=298, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=298, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:22.897 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=154, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:22.897 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:22.897 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=298, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=298, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:23.211 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":155,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=299, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=299, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:23.212 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=155, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:23.212 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:23.212 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=299, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=299, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:23.220 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":155,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=300, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=300, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:23.221 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=155, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:23.221 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:23.221 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=300, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=300, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:23.627 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":156,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=301, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=301, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:23.628 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=156, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-29 12:17:23.628 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-29 12:17:23.628 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=301, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=301, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:23.683 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":156,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=302, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=302, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-29 12:17:23.684 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=156, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-29 12:17:23.684 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-29 12:17:23.684 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=302, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=302, consumerTag=amq.ctag-omgYxkbIheI4lb2cevBVXw, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 09:45:21.223 [restartedMain] StockServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 09:45:31.920 [restartedMain] StockServiceApplication - Started StockServiceApplication in 13.461 seconds (JVM running for 14.734)
[INFO ] 2019-08-30 09:48:14.874 [restartedMain] StockServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 09:48:19.442 [restartedMain] StockServiceApplication - Started StockServiceApplication in 6.847 seconds (JVM running for 182.257)
[INFO ] 2019-08-30 09:48:30.847 [restartedMain] StockServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 09:48:33.929 [restartedMain] StockServiceApplication - Started StockServiceApplication in 5.249 seconds (JVM running for 196.744)
[INFO ] 2019-08-30 09:57:43.793 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=1, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 09:57:43.840 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=1, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 09:57:43.844 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 09:57:43.864 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=1, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 09:57:44.467 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=2, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 09:57:44.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=1, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 09:57:44.469 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 09:57:44.469 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=2, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 09:58:23.274 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":2,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=3, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 09:58:23.275 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=2, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 09:58:23.276 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 09:58:23.276 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=3, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 09:58:23.292 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":2,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=4, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 09:58:23.294 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=2, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 09:58:23.294 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 09:58:23.294 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=4, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:53.355 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":3,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=5, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:53.356 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=3, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:11:53.356 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:11:53.358 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=5, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:53.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":3,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=6, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:53.549 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=3, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:11:53.549 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:11:53.549 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=6, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:54.544 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":4,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=7, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:54.545 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=4, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:11:54.545 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:11:54.546 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=7, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:54.560 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":4,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=8, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:54.562 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=4, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:11:54.562 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:11:54.562 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=8, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:57.847 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":5,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=9, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:57.848 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=5, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:11:57.848 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:11:57.849 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=9, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:57.865 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":5,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=10, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:57.866 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=5, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:11:57.866 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:11:57.867 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=10, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.030 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":6,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=11, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.032 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=6, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:11:58.032 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:11:58.032 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=11, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.047 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":6,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=12, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.049 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=6, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:11:58.049 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:11:58.049 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=12, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.200 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":7,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=13, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=7, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:11:58.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:11:58.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=13, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.220 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":7,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=14, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.221 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=7, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:11:58.221 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:11:58.222 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=14, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.353 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":8,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=15, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.354 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=8, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:11:58.354 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:11:58.355 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=15, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.391 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":8,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=16, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.394 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=8, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:11:58.395 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:11:58.396 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=16, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.504 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":9,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=17, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.506 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=9, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:11:58.506 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:11:58.507 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=17, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.523 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":9,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=18, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.525 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=9, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:11:58.525 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:11:58.526 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=18, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.667 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":10,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=19, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.668 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=10, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:11:58.668 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:11:58.669 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=19, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.688 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":10,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=20, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:11:58.689 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=10, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:11:58.690 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:11:58.690 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=20, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.706 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":11,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=21, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.707 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=11, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:05.708 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:05.708 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=21, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.723 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":11,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=22, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.724 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=11, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:05.724 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:05.725 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=22, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.847 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":12,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=23, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.848 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=12, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:05.848 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:05.849 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=23, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.861 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":12,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=24, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.862 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=12, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:05.862 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:05.863 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=24, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.990 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":13,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=25, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:05.992 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=13, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:05.992 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:05.992 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=25, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.002 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":13,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=26, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.004 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=13, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:06.004 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:06.004 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=26, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.149 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":14,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=27, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.149 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=14, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:06.149 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:06.150 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=27, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.164 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":14,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=28, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.165 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=14, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:06.165 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:06.166 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=28, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.309 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":15,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=29, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.310 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=15, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:06.310 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:06.311 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=29, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.327 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":15,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=30, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.328 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=15, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:06.328 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:06.329 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=30, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.456 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":16,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=31, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.458 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=16, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:06.458 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:06.459 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=31, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.471 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":16,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=32, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.472 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=16, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:06.473 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:06.473 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=32, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.607 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":17,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=33, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.608 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=17, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:06.608 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:06.609 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=33, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.626 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":17,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=34, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.627 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=17, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:06.627 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:06.628 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=34, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.749 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":18,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=35, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.750 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=18, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:06.750 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:06.750 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=35, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.768 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":18,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=36, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.769 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=18, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:06.770 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:06.770 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=36, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.918 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":19,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=37, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.919 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=19, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:06.919 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:06.920 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=37, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.931 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":19,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=38, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:06.932 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=19, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:06.932 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:06.932 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=38, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:07.077 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":20,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=39, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:07.078 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=20, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:07.078 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:07.079 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=39, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:07.095 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":20,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=40, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:07.096 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=20, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:07.096 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:07.096 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=40, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:07.220 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":21,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=41, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:07.221 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=21, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:12:07.221 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:12:07.222 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=41, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:07.241 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":21,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=42, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:12:07.242 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=21, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:12:07.242 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:12:07.242 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=42, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:17.558 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":22,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=43, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:17.559 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=22, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:17.559 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:17.560 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=43, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:17.787 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":22,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=44, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:17.788 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=22, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:17.788 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:17.789 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=44, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:18.482 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":23,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=45, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:18.483 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=23, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:18.483 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:18.483 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=45, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:18.497 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":23,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=46, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:18.498 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=23, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:18.498 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:18.499 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=46, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.142 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":24,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=47, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.143 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=24, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:23.143 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:23.144 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=47, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.160 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":24,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=48, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.161 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=24, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:23.161 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:23.162 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=48, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.302 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":25,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=49, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.303 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=25, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:23.303 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:23.304 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=49, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.316 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":25,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=50, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.317 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=25, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:23.317 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:23.318 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=50, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.470 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":26,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=51, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=51, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.471 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=26, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:23.471 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:23.472 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=51, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=51, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.486 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":26,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=52, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=52, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.487 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=26, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:23.487 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:23.488 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=52, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=52, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.631 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":27,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=53, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=53, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.632 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=27, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:23.632 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:23.633 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=53, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=53, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.644 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":27,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=54, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=54, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.645 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=27, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:23.645 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:23.646 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=54, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=54, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.813 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":28,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=55, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=55, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.815 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=28, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:23.815 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:23.816 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=55, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=55, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.829 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":28,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=56, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=56, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.830 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=28, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:23.830 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:23.830 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=56, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=56, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.983 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":29,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=57, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=57, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:23.985 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=29, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:23.985 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:23.985 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=57, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=57, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.001 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":29,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=58, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=58, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.002 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=29, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:24.003 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:24.003 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=58, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=58, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.144 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":30,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=59, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=59, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.145 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=30, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:24.145 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:24.146 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=59, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=59, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.158 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":30,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=60, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=60, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.159 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=30, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:24.159 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:24.160 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=60, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=60, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.316 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":31,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=61, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=61, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.318 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=31, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:24.318 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:24.318 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=61, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=61, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.329 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":31,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=62, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=62, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.330 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=31, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:24.330 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:24.330 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=62, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=62, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.511 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":32,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=63, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=63, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.512 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=32, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:24.512 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:24.513 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=63, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=63, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.547 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":32,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=64, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=64, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=32, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:24.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:24.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=64, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=64, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.662 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":33,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=65, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=65, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.663 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=33, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:24.663 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:24.664 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=65, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=65, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.673 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":33,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=66, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=66, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.674 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=33, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:24.674 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:24.675 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=66, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=66, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.840 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":34,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=67, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=67, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.841 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=34, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:24.841 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:24.842 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=67, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=67, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.853 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":34,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=68, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=68, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.855 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=34, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:24.855 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:24.855 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=68, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=68, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.997 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":35,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=69, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=69, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:24.998 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=35, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:24.999 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:24.999 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=69, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=69, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.010 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":35,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=70, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=70, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.011 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=35, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:25.011 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:25.011 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=70, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=70, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.173 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":36,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=71, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=71, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.174 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=36, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:25.174 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:25.174 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=71, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=71, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.185 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":36,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=72, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=72, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.186 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=36, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:25.186 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:25.186 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=72, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=72, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.348 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":37,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=73, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=73, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.349 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=37, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:25.349 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:25.350 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=73, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=73, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.362 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":37,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=74, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=74, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.363 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=37, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:25.363 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:25.364 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=74, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=74, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.524 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":38,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=75, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=75, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.525 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=38, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:25.525 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:25.526 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=75, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=75, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.537 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":38,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=76, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=76, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.538 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=38, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:25.538 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:25.538 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=76, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=76, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.711 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":39,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=77, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=77, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.712 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=39, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:25.712 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:25.713 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=77, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=77, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.722 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":39,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=78, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=78, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.724 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=39, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:25.724 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:25.724 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=78, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=78, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.892 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":40,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=79, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=79, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.893 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=40, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:25.893 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:25.894 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=79, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=79, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.909 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":40,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=80, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=80, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:25.909 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=40, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:25.909 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:25.910 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=80, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=80, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.068 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":41,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=81, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=81, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.069 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=41, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:26.070 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:26.070 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=81, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=81, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.081 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":41,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=82, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=82, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.082 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=41, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:26.082 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:26.083 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=82, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=82, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.250 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":42,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=83, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=83, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.251 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=42, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:26.251 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:26.251 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=83, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=83, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.261 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":42,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=84, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=84, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.262 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=42, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:26.262 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:26.263 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=84, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=84, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.413 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":43,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=85, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=85, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.414 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=43, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:26.415 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:26.415 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=85, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=85, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.427 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":43,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=86, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=86, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.428 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=43, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:26.428 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:26.428 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=86, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=86, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.580 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":44,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=87, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=87, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.581 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=44, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:26.581 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:26.582 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=87, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=87, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.590 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":44,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=88, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=88, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.591 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=44, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:26.591 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:26.591 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=88, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=88, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.764 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":45,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=89, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=89, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.765 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=45, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:26.765 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:26.765 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=89, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=89, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.773 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":45,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=90, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=90, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.774 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=45, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:26.774 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:26.774 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=90, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=90, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.932 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":46,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=91, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=91, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.933 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=46, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:26.933 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:26.933 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=91, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=91, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.942 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":46,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=92, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=92, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:26.944 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=46, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:26.944 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:26.945 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=92, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=92, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.102 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":47,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=93, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=93, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.103 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=47, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:27.103 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:27.104 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=93, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=93, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.114 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":47,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=94, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=94, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.114 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=47, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:27.114 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:27.115 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=94, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=94, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.274 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":48,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=95, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=95, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.275 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=48, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:27.275 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:27.275 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=95, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=95, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.285 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":48,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=96, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=96, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.286 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=48, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:27.286 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:27.286 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=96, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=96, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.444 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":49,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=97, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=97, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.445 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=49, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:27.445 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:27.446 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=97, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=97, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.454 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":49,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=98, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=98, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.455 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=49, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:27.455 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:27.455 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=98, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=98, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.606 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":50,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=99, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=99, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.607 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=50, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:27.607 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:27.608 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=99, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=99, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.619 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":50,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=100, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=100, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.620 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=50, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:27.620 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:27.620 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=100, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=100, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.772 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":51,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=101, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=101, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.773 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=51, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:27.773 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:27.774 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=101, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=101, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.785 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":51,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=102, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=102, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.786 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=51, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:27.786 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:27.787 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=102, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=102, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.954 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":52,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=103, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=103, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.955 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=52, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:27.955 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:27.955 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=103, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=103, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.964 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":52,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=104, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=104, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:27.965 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=52, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:27.965 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:27.966 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=104, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=104, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.125 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":53,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=105, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=105, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.126 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=53, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:28.126 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:28.126 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=105, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=105, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.137 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":53,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=106, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=106, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.138 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=53, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:28.138 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:28.138 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=106, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=106, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.291 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":54,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=107, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=107, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.292 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=54, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:28.292 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:28.292 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=107, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=107, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.301 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":54,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=108, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=108, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.302 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=54, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:28.302 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:28.302 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=108, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=108, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":55,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=109, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=109, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.468 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=55, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:28.469 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:28.469 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=109, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=109, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.478 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":55,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=110, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=110, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=55, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:28.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:28.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=110, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=110, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.627 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":56,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=111, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=111, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.628 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=56, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:28.628 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:28.628 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=111, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=111, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.642 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":56,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=112, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=112, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.643 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=56, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:28.643 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:28.643 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=112, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=112, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.788 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":57,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=113, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=113, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.789 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=57, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:28.789 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:28.789 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=113, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=113, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.798 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":57,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=114, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=114, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.799 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=57, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:28.799 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:28.800 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=114, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=114, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.957 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":58,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=115, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=115, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.958 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=58, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:28.958 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:28.958 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=115, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=115, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.966 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":58,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=116, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=116, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:28.966 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=58, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:28.966 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:28.967 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=116, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=116, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.086 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":59,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=117, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=117, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.087 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=59, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:51.087 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:51.087 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=117, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=117, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.102 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":59,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=118, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=118, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.103 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=59, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:51.103 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:51.104 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=118, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=118, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.242 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":60,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=119, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=119, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.242 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=60, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:51.242 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:51.243 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=119, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=119, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.251 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":60,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=120, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=120, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.252 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=60, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:51.252 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:51.252 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=120, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=120, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.387 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":61,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=121, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=121, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.388 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=61, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:51.388 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:51.389 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=121, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=121, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.399 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":61,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=122, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=122, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.400 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=61, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:51.400 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:51.401 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=122, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=122, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":62,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=123, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=123, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=62, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:51.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:51.548 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=123, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=123, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.559 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":62,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=124, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=124, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.560 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=62, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:51.560 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:51.560 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=124, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=124, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.723 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":63,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=125, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=125, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.724 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=63, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:51.724 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:51.725 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=125, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=125, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.733 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":63,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=126, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=126, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.734 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=63, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:51.734 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:51.735 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=126, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=126, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.861 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":64,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=127, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=127, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.862 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=64, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:51.862 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:51.863 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=127, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=127, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.873 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":64,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=128, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=128, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:51.875 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=64, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:51.875 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:51.875 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=128, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=128, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.031 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":65,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=129, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=129, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.033 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=65, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:52.033 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:52.033 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=129, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=129, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.041 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":65,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=130, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=130, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.042 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=65, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:52.042 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:52.042 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=130, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=130, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.187 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":66,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=131, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=131, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.188 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=66, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:52.188 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:52.188 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=131, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=131, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.195 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":66,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=132, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=132, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.196 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=66, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:52.196 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:52.196 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=132, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=132, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.331 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":67,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=133, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=133, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.332 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=67, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:52.332 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:52.332 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=133, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=133, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.340 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":67,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=134, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=134, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=67, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:52.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:52.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=134, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=134, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.497 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":68,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=135, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=135, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.498 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=68, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:52.498 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:52.499 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=135, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=135, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.506 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":68,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=136, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=136, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.507 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=68, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:52.507 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:52.507 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=136, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=136, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.641 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":69,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=137, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=137, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.641 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=69, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:52.641 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:52.642 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=137, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=137, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.650 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":69,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=138, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=138, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.651 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=69, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:52.651 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:52.651 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=138, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=138, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.796 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":70,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=139, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=139, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.797 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=70, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:52.797 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:52.797 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=139, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=139, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.818 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":70,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=140, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=140, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.819 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=70, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:52.819 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:52.820 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=140, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=140, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.953 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":71,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=141, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=141, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:52.955 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=71, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 10:34:52.955 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 10:34:52.955 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=141, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=141, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:53.005 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":71,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=142, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=142, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 10:34:53.006 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=71, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 10:34:53.006 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 10:34:53.006 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=142, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=142, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:30:43.765 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":72,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=143, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=143, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:30:43.767 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=72, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:30:43.767 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:30:43.768 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=143, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=143, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:30:51.557 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":73,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=144, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=144, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:30:51.558 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=73, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:30:51.558 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:30:51.558 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=144, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=144, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:04.611 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":74,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=145, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=145, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:04.611 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=74, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:04.611 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:04.612 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=145, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=145, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:04.803 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":75,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=146, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=146, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:04.803 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=75, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:04.803 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:04.804 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=146, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=146, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:05.208 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":76,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=147, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=147, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:05.208 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=76, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:05.208 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:05.209 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=147, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=147, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:05.496 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":77,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=148, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=148, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:05.497 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=77, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:05.497 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:05.497 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=148, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=148, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:20.721 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":78,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=149, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=149, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:20.721 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=78, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:20.722 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:20.722 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=149, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=149, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.025 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":79,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=150, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=150, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.028 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=79, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:21.028 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:21.028 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=150, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=150, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.092 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":80,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=151, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=151, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.093 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=80, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:21.093 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:21.093 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=151, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=151, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.201 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":81,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=152, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=152, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=81, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:21.202 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:21.203 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=152, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=152, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.370 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":82,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=153, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=153, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.370 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=82, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:21.370 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:21.371 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=153, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=153, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.522 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":83,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=154, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=154, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.523 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=83, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:21.523 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:21.523 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=154, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=154, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.675 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":84,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=155, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=155, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.676 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=84, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:21.676 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:21.676 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=155, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=155, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.855 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":85,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=156, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=156, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:21.856 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=85, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:21.856 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:21.856 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=156, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=156, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.015 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":86,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=157, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=157, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.016 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=86, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:22.016 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:22.016 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=157, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=157, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.179 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":87,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=158, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=158, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.179 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=87, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:22.179 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:22.180 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=158, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=158, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":88,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=159, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=159, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=88, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:22.341 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:22.342 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=159, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=159, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.495 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":89,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=160, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=160, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.495 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=89, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:22.496 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:22.504 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=160, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=160, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.671 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":90,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=161, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=161, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.672 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=90, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:22.672 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:22.673 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=161, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=161, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.840 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":91,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=162, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=162, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:22.840 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=91, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:22.841 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:22.841 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=162, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=162, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.029 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":92,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=163, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=163, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.029 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=92, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:23.029 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:23.030 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=163, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=163, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.174 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":93,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=164, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=164, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.175 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=93, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:23.175 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:23.175 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=164, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=164, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.295 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":94,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=165, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=165, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.296 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=94, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:23.296 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:23.296 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=165, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=165, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.477 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":95,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=166, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=166, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.478 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=95, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:23.478 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:23.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=166, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=166, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.644 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":96,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=167, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=167, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.645 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=96, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:23.645 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:23.645 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=167, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=167, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.782 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":97,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=168, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=168, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:23.782 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=97, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:23.782 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:23.783 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=168, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=168, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.040 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":98,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=169, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=169, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.041 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=98, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:32.041 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:32.041 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=169, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=169, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.194 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":99,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=170, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=170, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.195 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=99, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:32.195 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:32.196 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=170, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=170, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.364 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":100,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=171, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=171, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.366 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=100, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:32.366 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:32.366 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=171, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=171, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.661 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":101,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=172, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=172, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.662 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=101, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:32.662 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:32.663 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=172, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=172, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.823 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":102,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=173, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=173, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:32.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=102, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:32.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:32.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=173, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=173, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.012 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":103,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=174, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=174, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.013 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=103, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:33.013 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:33.013 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=174, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=174, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.151 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":104,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=175, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=175, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.152 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=104, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:33.152 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:33.152 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=175, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=175, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.332 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":105,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=176, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=176, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.333 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=105, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:33.333 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:33.333 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=176, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=176, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.478 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":106,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=177, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=177, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=106, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:33.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:33.479 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=177, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=177, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.640 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":107,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=178, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=178, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.641 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=107, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:33.641 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:33.642 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=178, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=178, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.815 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":108,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=179, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=179, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.815 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=108, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:33.815 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:33.816 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=179, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=179, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.994 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":109,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=180, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=180, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:33.995 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=109, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:33.995 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:33.995 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=180, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=180, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:34.141 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":110,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=181, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=181, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:31:34.142 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=110, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:31:34.142 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:31:34.142 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=181, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=181, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.343 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":111,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=182, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=182, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=111, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:00.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:00.346 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=182, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=182, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.361 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":111,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=183, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=183, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.363 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=111, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:00.363 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:00.363 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=183, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=183, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.518 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":112,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=184, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=184, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.519 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=112, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:00.519 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:00.519 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=184, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=184, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.528 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":112,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=185, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=185, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.528 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=112, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:00.528 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:00.529 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=185, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=185, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.662 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":113,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=186, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=186, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.663 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=113, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:00.663 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:00.674 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=186, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=186, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.686 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":113,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=187, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=187, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.687 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=113, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:00.687 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:00.687 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=187, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=187, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.823 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":114,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=188, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=188, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.823 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=114, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:00.823 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:00.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=188, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=188, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.839 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":114,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=189, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=189, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.840 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=114, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:00.840 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:00.840 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=189, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=189, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.982 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":115,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=190, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=190, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.983 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=115, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:00.983 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:00.984 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=190, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=190, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.993 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":115,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=191, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=191, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:00.994 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=115, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:00.994 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:00.994 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=191, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=191, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.015 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":116,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=192, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=192, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.025 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=116, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:03.025 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:03.042 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=192, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=192, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.053 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":116,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=193, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=193, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.054 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=116, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:03.054 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:03.054 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=193, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=193, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.207 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":117,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=194, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=194, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.208 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=117, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:03.208 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:03.208 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=194, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=194, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.218 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":117,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=195, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=195, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.219 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=117, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:03.219 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:03.219 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=195, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=195, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.366 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":118,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=196, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=196, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.367 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=118, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:03.367 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:03.367 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=196, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=196, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.376 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":118,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=197, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=197, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.376 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=118, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:03.376 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:03.377 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=197, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=197, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.520 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":119,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=198, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=198, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.520 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=119, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:03.520 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:03.521 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=198, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=198, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.529 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":119,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=199, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=199, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.530 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=119, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:03.530 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:03.530 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=199, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=199, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.680 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":120,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=200, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=200, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.681 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=120, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:03.681 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:03.681 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=200, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=200, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.690 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":120,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=201, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=201, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.691 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=120, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:03.691 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:03.691 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=201, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=201, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.830 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":121,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=202, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=202, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.831 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=121, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:03.831 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:03.831 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=202, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=202, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.844 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":121,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=203, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=203, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:03.844 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=121, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:03.844 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:03.845 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=203, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=203, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.015 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":122,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=204, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=204, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.016 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=122, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:04.016 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:04.017 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=204, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=204, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.028 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":122,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=205, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=205, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.035 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=122, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:04.035 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:04.035 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=205, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=205, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.162 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":123,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=206, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=206, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.163 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=123, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:04.163 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:04.164 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=206, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=206, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.174 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":123,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=207, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=207, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.174 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=123, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:04.174 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:04.175 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=207, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=207, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.319 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":124,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=208, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=208, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.320 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=124, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:04.320 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:04.320 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=208, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=208, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.327 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":124,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=209, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=209, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.328 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=124, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:04.328 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:04.329 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=209, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=209, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.470 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":125,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=210, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=210, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.471 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=125, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:04.490 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:04.491 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=210, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=210, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.501 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":125,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=211, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=211, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.502 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=125, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:04.502 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:04.502 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=211, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=211, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.638 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":126,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=212, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=212, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.639 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=126, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:04.639 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:04.639 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=212, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=212, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.647 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":126,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=213, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=213, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.648 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=126, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:04.648 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:04.648 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=213, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=213, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.807 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":127,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=214, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=214, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.808 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=127, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:04.808 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:04.808 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=214, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=214, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.823 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":127,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=215, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=215, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=127, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:04.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:04.824 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=215, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=215, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.987 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":128,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=216, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=216, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.987 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=128, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:04.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:04.988 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=216, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=216, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.995 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":128,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=217, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=217, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:04.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=128, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:04.996 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:05.018 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=217, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=217, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.127 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":129,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=218, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=218, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.127 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=129, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:05.127 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:05.128 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=218, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=218, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.136 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":129,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=219, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=219, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.137 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=129, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:05.137 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:05.138 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=219, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=219, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.287 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":130,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=220, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=220, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.288 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=130, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:05.288 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:05.288 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=220, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=220, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.295 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":130,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=221, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=221, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.296 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=130, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:05.296 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:05.296 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=221, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=221, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.445 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":131,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=222, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=222, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.446 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=131, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:05.446 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:05.446 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=222, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=222, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.458 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":131,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=223, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=223, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.459 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=131, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:05.459 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:05.459 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=223, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=223, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.606 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":132,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=224, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=224, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.606 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=132, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:05.606 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:05.607 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=224, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=224, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.614 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":132,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=225, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=225, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.614 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=132, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:05.614 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:05.615 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=225, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=225, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.773 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":133,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=226, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=226, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.774 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=133, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:05.774 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:05.774 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=226, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=226, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.781 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":133,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=227, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=227, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.781 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=133, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:05.781 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:05.782 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=227, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=227, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.943 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":134,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=228, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=228, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.944 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=134, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:05.944 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:05.944 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=228, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=228, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.952 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":134,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=229, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=229, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:05.952 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=134, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:05.952 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:05.953 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=229, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=229, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.101 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":135,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=230, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=230, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.102 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=135, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:06.102 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:06.102 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=230, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=230, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.110 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":135,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=231, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=231, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.110 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=135, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:06.110 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:06.111 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=231, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=231, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.289 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":136,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=232, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=232, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.289 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=136, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:06.289 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:06.290 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=232, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=232, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.297 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":136,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=233, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=233, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.298 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=136, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:06.298 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:06.298 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=233, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=233, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.421 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":137,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=234, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=234, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.422 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=137, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:06.422 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:06.423 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=234, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=234, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.430 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":137,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=235, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=235, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.431 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=137, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:06.431 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:06.431 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=235, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=235, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.588 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":138,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=236, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=236, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.589 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=138, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:06.589 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:06.590 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=236, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=236, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.596 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":138,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=237, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=237, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.597 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=138, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:06.597 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:06.597 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=237, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=237, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.758 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":139,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=238, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=238, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.759 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=139, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:06.759 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:06.759 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=238, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=238, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.777 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":139,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=239, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=239, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.777 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=139, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:06.777 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:06.778 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=239, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=239, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.894 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":140,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=240, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=240, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.894 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=140, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:06.894 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:06.895 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=240, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=240, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.901 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":140,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=241, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=241, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:06.902 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=140, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:06.902 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:06.903 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=241, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=241, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:07.038 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":141,"itemList":["T-Shirt","Bat","Ball"],"action":"BLOCK_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=242, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=242, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:07.038 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=141, itemList=[T-Shirt, Bat, Ball], action=BLOCK_STOCK)
[INFO ] 2019-08-30 11:32:07.038 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Successfully block stock stockResponse = StockResponse(respCode=00, respMsg=STOCK_AVAILABLE)
[INFO ] 2019-08-30 11:32:07.039 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"00","respMsg":"STOCK_AVAILABLE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=242, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=242, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:07.046 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: New message received = (Body:'{"orderId":141,"itemList":["T-Shirt","Bat","Ball"],"action":"REVERT_STOCK"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, correlationId=243, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=243, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
[INFO ] 2019-08-30 11:32:07.047 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Converted stockRequest = StockRequest(orderId=141, itemList=[T-Shirt, Bat, Ball], action=REVERT_STOCK)
[INFO ] 2019-08-30 11:32:07.047 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Reverted the stock stockResponse = StockResponse(respCode=01, respMsg=STOCK_REVERTED)
[INFO ] 2019-08-30 11:32:07.047 [stockListenerContainer-1] LoggerSingleton - StockEventListener :: onMessage :: Final response = (Body:'{"respCode":"01","respMsg":"STOCK_REVERTED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.StockRequest}, type=StockResponse, correlationId=243, replyTo=stock-reply-exchange/stock-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=stock-request-exchange, receivedRoutingKey=stock-request-routing-key, deliveryTag=243, consumerTag=amq.ctag-EBUf-AyhZFPyYGkQf1JGjQ, consumerQueue=stock-request-queue])
