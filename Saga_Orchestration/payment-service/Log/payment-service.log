[INFO ] 2019-08-28 16:24:54.831 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-28 16:25:00.816 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 8.7 seconds (JVM running for 9.605)
[INFO ] 2019-08-28 16:54:27.560 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-28 16:54:30.982 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 5.654 seconds (JVM running for 1779.772)
[INFO ] 2019-08-28 16:54:49.771 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":3,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 16:54:49.781 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=3, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:54:49.783 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=3, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=8191, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:56:09.574 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 16:56:09.577 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:56:09.577 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=1057, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:57:41.241 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 16:57:41.243 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:57:41.243 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=618, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:58:28.570 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 16:58:28.572 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:58:28.572 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=9656, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:59:11.730 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 16:59:11.732 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 16:59:11.732 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=2141, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:00:33.903 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 17:00:33.905 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:00:33.905 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=3051, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:02:37.860 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 17:02:37.862 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:02:37.862 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=5816, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:04:59.486 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 17:04:59.489 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:04:59.489 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=1107, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:11.668 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":1,"custId":2,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 17:06:11.670 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:11.671 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet orderRequest = OrderRequest(orderId=1, custId=2, itemList=[a, b, c], orderStatus=00, totalPrice=9625, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=00, paymentRespDesc=CUSTOMER_DEBITED, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:27.167 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"orderId":2,"custId":1,"itemList":["a","b","c"],"orderStatus":"00","totalPrice":0,"systemDeliveryNo":"0","action":"BLOCK_STOCK","stockRespCode":"00","stockRespDesc":"STOCK_AVAILABLE","paymentRespCode":null,"paymentRespDesc":null,"deliveryRespCode":null,"deliveryRespDesc":null}' MessageProperties [headers={__TypeId__=com.stock.stockservice.model.OrderRequest}, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-5UQ3P9RQxHBUCff3nFVjtw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-28 17:06:27.169 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted orderRequest = OrderRequest(orderId=2, custId=1, itemList=[a, b, c], orderStatus=00, totalPrice=0, systemDeliveryNo=0, action=BLOCK_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=null, paymentRespDesc=null, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-28 17:06:27.169 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found orderRequest = OrderRequest(orderId=2, custId=1, itemList=[a, b, c], orderStatus=01, totalPrice=9933, systemDeliveryNo=0, action=REVERT_STOCK, stockRespCode=00, stockRespDesc=STOCK_AVAILABLE, paymentRespCode=01, paymentRespDesc=INSUFFCIENT_BALANCE, deliveryRespCode=null, deliveryRespDesc=null)
[INFO ] 2019-08-29 11:25:34.336 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 11:25:41.706 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 11.017 seconds (JVM running for 12.494)
[INFO ] 2019-08-29 11:28:37.343 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 11:28:40.838 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 5.754 seconds (JVM running for 191.627)
[INFO ] 2019-08-29 11:33:54.164 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=1, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:33:54.169 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 11:33:54.170 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=789, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-29 11:33:54.174 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":789,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=1, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:03.194 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=2, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:03.195 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:03.196 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8407, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:03.196 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8407,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=2, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:13.021 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=3, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:13.022 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:13.022 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2936, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:13.023 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2936,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=3, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:13.748 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=4, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:13.749 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:13.749 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8843, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:13.750 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8843,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=4, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:14.356 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=5, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:14.357 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:14.357 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=489, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:14.358 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":489,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=5, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:14.963 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=6, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:14.964 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:14.964 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1627, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:14.964 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1627,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=6, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:15.594 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=7, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:15.595 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:15.595 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1137, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:15.596 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1137,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=7, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:16.235 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=8, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:16.236 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:16.236 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1106, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:16.237 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1106,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=8, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:26.095 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=9, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:26.096 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 11:34:26.097 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=9996, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-29 11:34:26.097 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":9996,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=9, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:46.812 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=10, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:46.814 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:46.814 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1697, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:46.815 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1697,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=10, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:49.339 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=11, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:49.340 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:49.340 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1891, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:49.341 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1891,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=11, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:49.737 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=12, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:49.738 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:49.738 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3473, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:49.739 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3473,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=12, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:50.057 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=13, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:50.057 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:50.058 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1706, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:50.058 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1706,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=13, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:50.331 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=14, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:50.331 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:50.332 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8599, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:50.332 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8599,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=14, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:50.601 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=15, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:50.602 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:50.602 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3532, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:50.602 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3532,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=15, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:50.857 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=16, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:50.859 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:50.859 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4916, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:50.861 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4916,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=16, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.001 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=17, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.002 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:51.002 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2009, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:51.002 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2009,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=17, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.175 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=18, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.176 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:51.176 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=457, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:51.176 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":457,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=18, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.353 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=19, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.354 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:51.354 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7787, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:51.354 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7787,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=19, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.545 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=20, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.545 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:51.546 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8583, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:51.546 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8583,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=20, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.740 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=21, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.741 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:51.741 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=186, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:51.742 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":186,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=21, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.939 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=22, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:51.940 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:51.940 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2447, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:51.940 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2447,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=22, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.079 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=23, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.080 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:52.080 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2284, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:52.081 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2284,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=23, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.233 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=24, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.234 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:52.234 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2228, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:52.234 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2228,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=24, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.427 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=25, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.428 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:52.428 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2739, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:52.429 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2739,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=25, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.577 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=26, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.577 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:52.577 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6552, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:52.578 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6552,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=26, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.756 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=27, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.757 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:52.757 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7340, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:52.758 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7340,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=27, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.908 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=28, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:52.909 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:52.909 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2533, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:52.910 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2533,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=28, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.080 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=29, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.081 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:53.081 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3543, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:53.082 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3543,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=29, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.222 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=30, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.223 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:53.223 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7631, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:53.224 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7631,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=30, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.567 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=31, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.567 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:53.568 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9087, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:53.568 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9087,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=31, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.736 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=32, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.736 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:53.737 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=503, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:53.737 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":503,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=32, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.921 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=33, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:53.922 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:53.922 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9111, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:53.923 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9111,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=33, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.096 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=34, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.097 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:54.097 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8191, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:54.097 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8191,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=34, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.265 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=35, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.266 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:54.266 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5699, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:54.267 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5699,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=35, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.454 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=36, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.455 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:54.455 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5923, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:54.455 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5923,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=36, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.617 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=37, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.618 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:54.618 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8321, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:54.619 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8321,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=37, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.800 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=38, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.801 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:54.801 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6606, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:54.802 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6606,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=38, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.990 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=39, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:54.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:54.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=385, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:54.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":385,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=39, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.135 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=40, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.136 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:55.136 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8978, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:55.136 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8978,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=40, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.313 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=41, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.314 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:55.314 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8930, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:55.314 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8930,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=41, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.463 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=42, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.463 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:55.463 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1702, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:55.464 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1702,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=42, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.640 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=43, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.641 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:55.641 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4080, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:55.641 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4080,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=43, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.798 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=44, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.799 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:55.799 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1415, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:55.800 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1415,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=44, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.983 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=45, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:55.983 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:55.983 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7733, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:55.984 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7733,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=45, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.156 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=46, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.157 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:56.157 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1725, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:56.158 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1725,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=46, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.323 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=47, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.324 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:56.324 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5285, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:56.324 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5285,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=47, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.477 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=48, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.478 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:56.478 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=903, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:56.478 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":903,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=48, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.654 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=49, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.655 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:56.655 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5076, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:56.656 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5076,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=49, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.816 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=50, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.818 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:56.818 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2143, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:56.819 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2143,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=50, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=51, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=51, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:56.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:56.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=753, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:56.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":753,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=51, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=51, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.167 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=52, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=52, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.168 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:57.168 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=315, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:57.169 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":315,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=52, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=52, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.349 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=53, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=53, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.350 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:57.350 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9927, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:57.351 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9927,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=53, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=53, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.519 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=54, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=54, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.519 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:57.519 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8742, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:57.520 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8742,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=54, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=54, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.751 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=55, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=55, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.752 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:57.752 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6236, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:57.753 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6236,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=55, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=55, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.888 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=56, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=56, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:57.888 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:57.888 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6788, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:57.889 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6788,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=56, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=56, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:58.140 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=57, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=57, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:58.141 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:58.141 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8074, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:58.142 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8074,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=57, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=57, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:58.201 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=58, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=58, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:58.202 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:34:58.202 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6296, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:34:58.203 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6296,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=58, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=58, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:59.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=59, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=59, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:34:59.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 11:34:59.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=377, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-29 11:34:59.993 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":377,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=59, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=59, consumerTag=amq.ctag-j-hnFGSZ7AOye6p5jE67ig, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:15.615 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 11:36:19.102 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 5.704 seconds (JVM running for 649.891)
[INFO ] 2019-08-29 11:36:29.989 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=60, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:29.990 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:29.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4761, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:29.994 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4761,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=60, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:35.583 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=61, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:35.584 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:35.584 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9180, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:35.584 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9180,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=61, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:35.775 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=62, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:35.775 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:35.776 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6868, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:35.776 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6868,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=62, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:35.902 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=63, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:35.903 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:35.903 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6613, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:35.904 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6613,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=63, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.081 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=64, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.082 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:36.082 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9802, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:36.082 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9802,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=64, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.232 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=65, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.232 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:36.232 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6206, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:36.233 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6206,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=65, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.391 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=66, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.391 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:36.392 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7388, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:36.392 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7388,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=66, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.542 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=67, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.542 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:36.542 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3346, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:36.543 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3346,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=67, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.702 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=68, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.702 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:36.702 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6841, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:36.703 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6841,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=68, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.869 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=69, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:36.870 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:36.870 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=540, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:36.870 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":540,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=69, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.033 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=70, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.034 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:37.034 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=966, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:37.034 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":966,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=70, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.181 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=71, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.182 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:37.182 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7615, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:37.182 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7615,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=71, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.369 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=72, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.369 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:37.369 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7808, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:37.370 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7808,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=72, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.500 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=73, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.501 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:37.501 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8640, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:37.502 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8640,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=73, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.662 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=74, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.662 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:37.662 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4229, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:37.663 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4229,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=74, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.829 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=75, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.831 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:37.831 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9634, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:37.832 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9634,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=75, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=76, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:37.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:37.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5921, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:37.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5921,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=76, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.158 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=77, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.158 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:38.158 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4670, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:38.159 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4670,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=77, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.318 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=78, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.319 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:38.319 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1124, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:38.320 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1124,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=78, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.506 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=79, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.506 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:38.506 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8861, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:38.507 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8861,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=79, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.637 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=80, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.638 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:38.638 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2780, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:38.638 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2780,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=80, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.796 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=81, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.797 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:38.797 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6394, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:38.798 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6394,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=81, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.943 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=82, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:38.944 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:38.944 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6168, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:38.944 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6168,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=82, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:39.084 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=83, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:39.085 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:36:39.085 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4762, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:36:39.085 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4762,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=83, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:41.151 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=84, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:36:41.151 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 11:36:41.152 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=5058, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-29 11:36:41.152 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":5058,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=84, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-ajIEqRS11QN4z_5z-0Fi-g, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:40:59.831 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 11:41:03.139 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 5.558 seconds (JVM running for 933.928)
[INFO ] 2019-08-29 11:41:11.667 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=85, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:11.669 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 11:41:11.670 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=8241, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-29 11:41:11.672 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":8241,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=85, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:15.771 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=86, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:15.771 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:15.771 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4549, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:15.771 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4549,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=86, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.244 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=87, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.244 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:16.244 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=739, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:16.245 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":739,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=87, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.324 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=88, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.325 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:16.325 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1909, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:16.326 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1909,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=88, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.500 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=89, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.500 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:16.500 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6558, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:16.501 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6558,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=89, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.639 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=90, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.640 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:16.640 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1958, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:16.640 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1958,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=90, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.811 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=91, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.811 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:16.811 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3130, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:16.812 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3130,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=91, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.966 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=92, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:16.967 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:16.967 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6954, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:16.967 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6954,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=92, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.133 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=93, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.134 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:17.134 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7537, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:17.134 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7537,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=93, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.311 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=94, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.311 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:17.312 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6519, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:17.312 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6519,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=94, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.510 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=95, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.511 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:17.511 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4903, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:17.511 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4903,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=95, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.679 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=96, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.680 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:17.680 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2896, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:17.680 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2896,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=96, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.838 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=97, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:17.839 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:17.839 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5016, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:17.839 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5016,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=97, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.007 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=98, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.007 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:18.007 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2533, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:18.008 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2533,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=98, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.199 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=99, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.200 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:18.200 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1432, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:18.200 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1432,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=99, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.345 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=100, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.347 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:18.347 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8193, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:18.348 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8193,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=100, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.684 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=101, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.685 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:18.685 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1904, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:18.686 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1904,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=101, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.844 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=102, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:18.845 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:18.845 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6960, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:18.845 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6960,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=102, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.026 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=103, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.027 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:19.027 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7233, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:19.027 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7233,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=103, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.217 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=104, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.217 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:19.218 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7722, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:19.218 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7722,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=104, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.358 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=105, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.358 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:19.358 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1272, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:19.359 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1272,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=105, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.538 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=106, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.539 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:19.539 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8270, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:19.540 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8270,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=106, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.686 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=107, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.686 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:19.686 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5066, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:19.687 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5066,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=107, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.876 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=108, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:19.876 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:19.876 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2726, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:19.877 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2726,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=108, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:20.035 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=109, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:20.036 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:20.036 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8633, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:20.037 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8633,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=109, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:20.159 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=110, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:20.159 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:20.159 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5995, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:20.160 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5995,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=110, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:20.308 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=111, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:20.309 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 11:41:20.309 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6947, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 11:41:20.309 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6947,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=111, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:24.469 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=112, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 11:41:24.469 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 11:41:24.469 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=9428, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-29 11:41:24.471 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":9428,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=112, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-Faj3--gtFalZaJwcQZyJ7w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:12:39.081 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 12:12:42.317 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 5.505 seconds (JVM running for 2833.107)
[INFO ] 2019-08-29 12:12:58.411 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=113, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-vDxMHrJSWpZ1igrIk91YGg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:12:58.412 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[ERROR] 2019-08-29 12:12:58.412 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Technical Error Occured  :: java.lang.NullPointerException
[INFO ] 2019-08-29 12:13:24.250 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=114, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-vDxMHrJSWpZ1igrIk91YGg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:13:24.251 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[ERROR] 2019-08-29 12:13:24.251 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Technical Error Occured  :: java.lang.NullPointerException
[INFO ] 2019-08-29 12:15:06.862 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 12:15:10.123 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 5.498 seconds (JVM running for 2980.912)
[INFO ] 2019-08-29 12:15:12.603 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=115, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:12.603 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:13.036 [hystrix-PaymentServiceImpl-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3965, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:13.042 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3965,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=115, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:17.443 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=116, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:17.444 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:17.446 [hystrix-PaymentServiceImpl-2] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7034, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:17.447 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7034,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=116, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:17.880 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=117, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:17.880 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:17.882 [hystrix-PaymentServiceImpl-3] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4278, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:17.884 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4278,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=117, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.093 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=118, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.093 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:18.096 [hystrix-PaymentServiceImpl-4] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2176, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:18.097 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2176,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=118, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.258 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=119, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.258 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:18.260 [hystrix-PaymentServiceImpl-5] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6630, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:18.261 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6630,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=119, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.415 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=120, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.416 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:18.418 [hystrix-PaymentServiceImpl-6] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1286, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:18.419 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1286,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=120, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.582 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=121, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.583 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:18.585 [hystrix-PaymentServiceImpl-7] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6025, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:18.586 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6025,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=121, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.739 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=122, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.740 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:18.741 [hystrix-PaymentServiceImpl-8] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=367, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:18.742 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":367,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=122, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.910 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=123, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:18.911 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:18.913 [hystrix-PaymentServiceImpl-9] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2213, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:18.914 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2213,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=123, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.206 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=124, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.207 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:19.209 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9463, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:19.209 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9463,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=124, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.385 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=125, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.385 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:19.387 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9554, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:19.387 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9554,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=125, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.549 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=126, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.550 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:19.551 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2820, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:19.552 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2820,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=126, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.720 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=127, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.721 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:19.722 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3667, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:19.723 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3667,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=127, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.896 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=128, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:19.897 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:19.898 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5089, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:19.899 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5089,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=128, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.079 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=129, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.080 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:20.081 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=898, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:20.082 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":898,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=129, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.234 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=130, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.235 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:20.237 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3838, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:20.238 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3838,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=130, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.394 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=131, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.395 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:20.397 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1965, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:20.397 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1965,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=131, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.561 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=132, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.561 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:20.563 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7632, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:20.563 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7632,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=132, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.784 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=133, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.785 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:20.787 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3380, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:20.787 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3380,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=133, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.903 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=134, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:20.904 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:20.905 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8061, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:20.905 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8061,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=134, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:21.063 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=135, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:21.063 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:21.064 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2086, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:21.065 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2086,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=135, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:21.208 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=136, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:21.208 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:21.209 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3714, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:21.209 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3714,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=136, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:21.354 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=137, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:21.354 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:15:21.355 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1261, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:21.355 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1261,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=137, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:27.856 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=138, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:15:27.856 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 12:15:27.857 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=3, totalPrice=1027, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:15:27.857 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":1027,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=138, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:16:15.201 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=139, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:16:15.201 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 12:16:15.202 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=4767, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-29 12:16:15.224 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":4767,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=139, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-gZepPHUDDb0xfrt-0GVZGQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:04.809 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 12:17:08.038 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 5.471 seconds (JVM running for 3098.827)
[INFO ] 2019-08-29 12:17:14.413 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=140, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:14.413 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-29 12:17:14.420 [hystrix-PaymentServiceImpl-1] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=1658, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-29 12:17:14.423 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":1658,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=140, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:17.979 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=141, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:17.979 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:17.981 [hystrix-PaymentServiceImpl-2] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8946, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:17.981 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8946,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=141, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:19.254 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=142, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:19.255 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:19.256 [hystrix-PaymentServiceImpl-3] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6379, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:19.257 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6379,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=142, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:19.665 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=143, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:19.666 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:19.667 [hystrix-PaymentServiceImpl-4] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1782, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:19.668 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1782,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=143, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:19.926 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=144, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:19.926 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:19.928 [hystrix-PaymentServiceImpl-5] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3286, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:19.929 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3286,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=144, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:20.190 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=145, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:20.191 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:20.192 [hystrix-PaymentServiceImpl-6] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1471, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:20.193 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1471,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=145, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:20.441 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=146, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:20.441 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:20.442 [hystrix-PaymentServiceImpl-7] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6600, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:20.443 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6600,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=146, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:20.687 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=147, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:20.688 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:20.689 [hystrix-PaymentServiceImpl-8] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8191, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:20.689 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8191,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=147, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:20.934 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=148, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:20.934 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:20.936 [hystrix-PaymentServiceImpl-9] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=509, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:20.936 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":509,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=148, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:21.204 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=149, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:21.205 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:21.207 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6405, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:21.207 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6405,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=149, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:21.476 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=150, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:21.476 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:21.477 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9047, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:21.478 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9047,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=150, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:21.757 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=151, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:21.758 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:21.759 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6839, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:21.759 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6839,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=151, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:22.134 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=152, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:22.135 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:22.136 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9298, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:22.136 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9298,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=152, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:22.494 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=153, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:22.495 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:22.495 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4939, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:22.496 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4939,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=153, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:22.889 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=154, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:22.889 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:22.890 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=708, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:22.891 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":708,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=154, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:23.214 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=155, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:23.215 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:23.216 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=637, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:23.217 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":637,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=155, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:23.631 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=156, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:17:23.631 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-29 12:17:23.632 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6028, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-29 12:17:23.633 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6028,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=156, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-OTO2VdEX-Z_TPCUqRm5RSw, consumerQueue=payment-request-queue])
[INFO ] 2019-08-29 12:20:48.310 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-29 12:20:51.520 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 5.467 seconds (JVM running for 3322.309)
[INFO ] 2019-08-30 09:45:28.458 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 09:45:36.817 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 12.644 seconds (JVM running for 13.825)
[INFO ] 2019-08-30 09:51:30.840 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 09:51:40.585 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 12.553 seconds (JVM running for 13.525)
[INFO ] 2019-08-30 09:56:37.033 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 09:56:41.123 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 6.346 seconds (JVM running for 314.064)
[INFO ] 2019-08-30 09:57:43.907 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=1, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-aq84avZY7NUCrOnuc7JVtQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 09:57:43.911 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 09:57:44.430 [hystrix-PaymentServiceImpl-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=319, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 09:57:44.436 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":319,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=1, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-aq84avZY7NUCrOnuc7JVtQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 09:58:23.282 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=2, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-aq84avZY7NUCrOnuc7JVtQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 09:58:23.283 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 09:58:23.285 [hystrix-PaymentServiceImpl-2] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4703, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 09:58:23.287 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4703,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=2, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-aq84avZY7NUCrOnuc7JVtQ, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:09:16.500 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 10:09:24.355 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 10.73 seconds (JVM running for 11.721)
[INFO ] 2019-08-30 10:11:53.367 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=3, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:53.371 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:11:53.533 [hystrix-PaymentServiceImpl-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3369, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:11:53.538 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3369,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=3, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:54.551 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=4, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:54.552 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:11:54.554 [hystrix-PaymentServiceImpl-2] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=715, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:11:54.556 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":715,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=4, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:57.854 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=5, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:57.855 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:11:57.857 [hystrix-PaymentServiceImpl-3] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2447, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:11:57.859 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2447,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=5, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.037 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=6, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.037 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:11:58.040 [hystrix-PaymentServiceImpl-4] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3292, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:11:58.042 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3292,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=6, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.210 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=7, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.211 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:11:58.215 [hystrix-PaymentServiceImpl-5] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=923, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:11:58.216 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":923,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=7, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.360 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=8, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.361 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:11:58.363 [hystrix-PaymentServiceImpl-6] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6151, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:11:58.364 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6151,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=8, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.513 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=9, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.514 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:11:58.517 [hystrix-PaymentServiceImpl-7] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2892, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:11:58.518 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2892,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=9, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.678 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=10, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:11:58.679 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:11:58.681 [hystrix-PaymentServiceImpl-8] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9557, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:11:58.683 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9557,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=10, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:05.713 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=11, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:05.715 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:05.717 [hystrix-PaymentServiceImpl-9] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6005, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:05.718 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6005,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=11, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:05.852 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=12, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:05.853 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:05.855 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2862, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:05.856 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2862,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=12, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:05.996 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=13, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:05.997 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:05.998 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1007, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:05.999 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1007,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=13, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.156 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=14, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.156 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:06.157 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1661, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:06.159 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1661,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=14, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.318 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=15, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.319 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:06.320 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8346, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:06.321 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8346,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=15, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.463 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=16, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.464 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:06.466 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7450, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:06.467 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7450,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=16, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.616 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=17, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.617 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:06.618 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4458, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:06.619 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4458,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=17, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.759 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=18, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.761 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:06.763 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4046, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:06.764 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4046,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=18, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.923 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=19, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:06.924 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:06.926 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2237, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:06.927 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2237,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=19, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:07.086 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=20, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:07.087 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:07.089 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2057, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:07.090 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2057,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=20, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:07.231 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=21, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:12:07.231 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:12:07.233 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5898, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:12:07.234 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5898,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=21, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-8wclCL67DclrTJKbI1_Bbg, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:19:24.592 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 10:19:32.284 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 10.462 seconds (JVM running for 11.474)
[INFO ] 2019-08-30 10:23:17.408 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 10:23:39.107 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 10:23:47.009 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 10.643 seconds (JVM running for 11.626)
[INFO ] 2019-08-30 10:24:49.184 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 10:24:57.012 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 10.54 seconds (JVM running for 11.55)
[INFO ] 2019-08-30 10:25:40.559 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 10:27:37.349 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 10:27:45.220 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 10.693 seconds (JVM running for 11.659)
[INFO ] 2019-08-30 10:34:17.570 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=22, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:17.574 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:17.764 [hystrix-PaymentServiceImpl-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9794, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:17.770 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9794,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=22, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:18.487 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=23, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:18.488 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:18.491 [hystrix-PaymentServiceImpl-2] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8269, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:18.493 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8269,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=23, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.151 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=24, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.152 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:23.155 [hystrix-PaymentServiceImpl-3] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6219, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:23.156 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6219,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=24, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.307 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=25, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.308 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:23.310 [hystrix-PaymentServiceImpl-4] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6453, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:23.312 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6453,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=25, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.476 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=26, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.477 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:23.479 [hystrix-PaymentServiceImpl-5] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2720, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:23.481 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2720,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=26, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.636 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=27, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.637 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:23.639 [hystrix-PaymentServiceImpl-6] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3060, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:23.640 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3060,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=27, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.820 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=28, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.821 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:23.823 [hystrix-PaymentServiceImpl-7] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6209, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:23.824 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6209,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=28, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=29, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:23.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:23.994 [hystrix-PaymentServiceImpl-8] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8058, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:23.995 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8058,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=29, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.150 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=30, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.151 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:24.153 [hystrix-PaymentServiceImpl-9] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3841, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:24.154 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3841,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=30, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.322 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=31, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.322 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:24.324 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7574, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:24.325 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7574,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=31, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.540 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=32, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.540 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:24.542 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5836, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:24.543 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5836,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=32, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.667 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=33, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.668 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:24.669 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9749, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:24.670 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9749,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=33, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.845 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=34, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:24.846 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:24.847 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4090, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:24.848 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4090,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=34, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.003 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=35, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.004 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:25.005 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=981, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:25.006 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":981,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=35, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.178 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=36, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.179 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:25.180 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4272, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:25.181 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4272,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=36, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.353 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=37, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.355 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:25.357 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1416, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:25.358 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1416,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=37, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.530 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=38, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.531 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:25.532 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9463, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:25.533 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9463,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=38, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.716 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=39, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.716 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:25.718 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=97, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:25.718 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":97,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=39, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.900 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=40, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:25.901 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:25.903 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2431, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:25.904 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2431,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=40, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.075 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=41, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.076 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:26.077 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7485, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:26.078 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7485,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=41, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.254 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=42, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.255 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:26.255 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4134, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:26.256 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4134,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=42, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.421 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=43, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.421 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:26.422 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9997, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:26.423 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9997,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=43, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.585 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=44, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.586 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:26.586 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4279, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:26.587 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4279,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=44, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.768 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=45, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.769 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:26.769 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9231, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:26.770 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9231,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=45, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.936 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=46, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:26.937 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:26.937 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=110, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:26.938 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":110,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=46, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.108 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=47, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.108 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:27.109 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3156, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:27.110 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3156,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=47, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.279 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=48, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.280 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:27.281 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9856, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:27.281 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9856,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=48, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.449 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=49, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.449 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:27.450 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7446, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:27.450 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7446,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=49, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.614 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=50, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.615 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:27.615 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9896, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:27.616 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9896,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=50, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.780 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=51, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.781 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:27.781 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3007, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:27.782 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3007,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=51, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.959 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=52, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:27.959 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:27.960 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1128, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:27.961 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1128,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=52, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.132 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=53, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.133 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:28.133 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8820, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:28.134 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8820,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=53, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.296 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=54, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.296 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:28.297 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=329, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:28.298 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":329,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=54, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.473 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=55, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.474 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:28.474 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8460, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:28.475 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8460,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=55, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.637 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=56, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.638 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:28.638 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4039, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:28.639 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4039,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=56, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.794 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=57, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.794 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:28.795 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5881, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:28.796 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5881,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=57, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.961 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=58, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:28.962 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:28.962 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=373, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:28.963 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":373,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=58, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.090 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=59, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.091 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:51.091 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6118, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:51.092 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6118,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=59, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.246 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=60, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.246 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:51.247 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6039, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:51.248 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6039,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=60, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.391 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=61, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.392 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:51.393 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=438, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:51.393 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":438,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=61, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.552 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=62, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.552 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:51.554 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3058, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:51.554 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3058,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=62, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.728 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=63, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.729 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:51.729 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5092, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:51.730 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5092,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=63, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.868 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=64, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:51.869 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:51.869 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9847, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:51.870 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9847,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=64, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.035 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=65, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.035 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:52.036 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4532, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:52.036 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4532,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=65, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.191 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=66, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.191 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:52.192 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=4267, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:52.192 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":4267,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=66, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.335 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=67, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.336 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:52.336 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2387, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:52.337 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2387,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=67, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.502 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=68, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.502 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:52.503 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7313, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:52.503 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7313,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=68, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.645 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=69, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.646 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:52.646 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1120, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:52.647 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1120,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=69, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.811 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=70, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.812 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:52.813 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6840, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:52.813 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6840,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=70, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=71, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 10:34:52.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 10:34:52.992 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5114, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 10:34:52.993 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5114,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=71, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-jfT5qjwYkss6_5vc4H2emA, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:29:43.370 [restartedMain] PaymentServiceApplication - No active profile set, falling back to default profiles: default
[INFO ] 2019-08-30 11:29:53.083 [restartedMain] PaymentServiceApplication - Started PaymentServiceApplication in 12.484 seconds (JVM running for 13.512)
[INFO ] 2019-08-30 11:30:43.780 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=72, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:30:43.788 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:30:44.262 [hystrix-PaymentServiceImpl-1] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=1557, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:30:44.270 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":1557,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=72, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=1, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:30:51.561 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=73, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:30:51.562 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:30:51.564 [hystrix-PaymentServiceImpl-2] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=1569, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:30:51.568 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":1569,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=73, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=2, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:04.615 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=74, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:04.616 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:04.617 [hystrix-PaymentServiceImpl-3] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=4937, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:04.619 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":4937,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=74, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=3, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:04.806 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=75, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:04.807 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:04.809 [hystrix-PaymentServiceImpl-4] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=4363, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:04.811 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":4363,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=75, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=4, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:05.213 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=76, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:05.213 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:05.214 [hystrix-PaymentServiceImpl-5] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=7576, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:05.216 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":7576,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=76, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=5, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:05.527 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=77, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:05.528 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:05.530 [hystrix-PaymentServiceImpl-6] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=2274, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:05.531 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":2274,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=77, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=6, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:20.726 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=78, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:20.727 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:20.728 [hystrix-PaymentServiceImpl-7] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=4515, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:20.729 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":4515,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=78, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=7, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.032 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=79, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.033 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:21.035 [hystrix-PaymentServiceImpl-8] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=8040, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:21.036 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":8040,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=79, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=8, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.097 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=80, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.098 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:21.099 [hystrix-PaymentServiceImpl-9] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=7108, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:21.101 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":7108,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=80, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=9, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.205 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=81, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.206 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:21.207 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=2171, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:21.209 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":2171,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=81, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=10, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.374 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=82, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.375 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:21.375 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=8648, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:21.377 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":8648,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=82, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=11, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.526 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=83, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.527 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:21.527 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=6907, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:21.529 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":6907,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=83, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=12, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.683 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=84, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.683 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:21.684 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=2880, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:21.686 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":2880,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=84, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=13, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.860 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=85, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:21.860 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:21.861 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=2801, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:21.863 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":2801,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=85, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=14, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.020 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=86, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.021 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:22.022 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=5835, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:22.023 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":5835,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=86, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=15, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.183 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=87, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.184 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:22.186 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=284, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:22.188 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":284,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=87, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=16, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.345 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=88, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.346 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:22.347 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=5405, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:22.348 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":5405,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=88, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=17, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.507 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=89, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.508 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:22.509 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=7387, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:22.510 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":7387,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=89, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=18, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.675 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=90, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.676 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:22.677 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=3167, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:22.678 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":3167,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=90, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=19, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.844 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=91, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:22.844 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:22.845 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=5874, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:22.846 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":5874,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=91, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=20, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.033 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=92, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.033 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:23.034 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=5218, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:23.035 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":5218,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=92, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=21, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.179 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=93, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.180 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:23.180 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=5009, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:23.181 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":5009,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=93, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=22, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.298 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=94, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.299 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:23.300 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=2734, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:23.301 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":2734,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=94, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=23, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.481 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=95, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.482 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:23.482 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=1224, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:23.484 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":1224,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=95, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=24, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.649 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=96, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.650 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:23.650 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=8266, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:23.652 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":8266,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=96, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=25, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.787 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=97, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:23.787 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:23.788 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=201, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:23.790 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":201,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=97, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=26, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.044 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=98, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.045 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:32.046 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=1734, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:32.047 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":1734,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=98, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=27, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.198 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=99, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.199 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:32.200 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=7277, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:32.200 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":7277,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=99, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=28, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.369 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=100, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.370 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:32.371 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=5382, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:32.372 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":5382,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=100, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=29, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.666 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=101, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.667 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:32.667 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=7234, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:32.668 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":7234,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=101, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=30, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.827 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=102, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:32.828 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:32.828 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=5942, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:32.829 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":5942,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=102, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=31, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.016 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=103, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.017 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:33.018 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=8693, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:33.018 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":8693,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=103, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=32, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.155 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=104, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.156 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:33.157 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=3910, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:33.158 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":3910,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=104, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=33, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.336 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=105, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.337 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:33.337 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=9450, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:33.338 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":9450,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=105, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=34, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.482 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=106, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.482 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:33.483 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=4106, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:33.484 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":4106,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=106, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=35, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.645 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=107, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.646 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:33.646 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=6668, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:33.647 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":6668,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=107, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=36, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.819 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=108, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.820 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:33.820 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=491, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:33.821 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":491,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=108, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=37, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.998 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=109, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:33.999 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:34.000 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=536, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:34.000 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":536,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=109, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=38, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:34.146 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":3,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=110, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:31:34.146 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=3, totalPrice=0)
[INFO ] 2019-08-30 11:31:34.147 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomer :: Successful debited customer wallet paymentResponse = PaymentResponse(custId=3, totalPrice=295, respCode=00, respMsg=CUSTOMER_DEBITED)
[INFO ] 2019-08-30 11:31:34.148 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":3,"totalPrice":295,"respCode":"00","respMsg":"CUSTOMER_DEBITED"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=110, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=39, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.348 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=111, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.350 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:00.358 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8059, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:00.359 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8059,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=111, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=40, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.522 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=112, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.523 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:00.524 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3198, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:00.525 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3198,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=112, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=41, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.680 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=113, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.681 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:00.682 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=2775, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:00.683 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":2775,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=113, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=42, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.827 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=114, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.828 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:00.829 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=366, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:00.830 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":366,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=114, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=43, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.987 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=115, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:00.988 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:00.989 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9252, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:00.990 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9252,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=115, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=44, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.047 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=116, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.047 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:03.049 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8917, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:03.050 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8917,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=116, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=45, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.211 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=117, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.212 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:03.213 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6645, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:03.214 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6645,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=117, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=46, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.370 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=118, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.371 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:03.372 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=8173, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:03.373 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":8173,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=118, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=47, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.523 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=119, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.524 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:03.525 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3413, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:03.525 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3413,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=119, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=48, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.684 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=120, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.684 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:03.685 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6138, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:03.686 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6138,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=120, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=49, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.834 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=121, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:03.834 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:03.835 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9554, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:03.836 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9554,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=121, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=50, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.020 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=122, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=51, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.021 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:04.022 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=7514, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:04.023 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":7514,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=122, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=51, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.167 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=123, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=52, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.168 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:04.170 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1536, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:04.170 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1536,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=123, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=52, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.323 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=124, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=53, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.323 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:04.324 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5599, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:04.325 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5599,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=124, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=53, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.494 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=125, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=54, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.495 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:04.496 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=471, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:04.497 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":471,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=125, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=54, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.641 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=126, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=55, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.642 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:04.643 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3970, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:04.644 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3970,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=126, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=55, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.816 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=127, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=56, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.817 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:04.818 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3494, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:04.819 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3494,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=127, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=56, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.990 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=128, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=57, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:04.991 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:04.992 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9139, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:04.993 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9139,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=128, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=57, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.130 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=129, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=58, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.131 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:05.132 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5196, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:05.133 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5196,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=129, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=58, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.290 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=130, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=59, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.291 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:05.292 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=1094, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:05.293 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":1094,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=130, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=59, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.449 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=131, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=60, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.449 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:05.450 [hystrix-PaymentServiceImpl-10] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=206, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:05.451 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":206,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=131, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=60, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.609 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=132, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=61, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.610 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:05.610 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5287, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:05.611 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5287,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=132, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=61, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.777 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=133, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=62, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.778 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:05.778 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6591, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:05.779 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6591,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=133, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=62, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.947 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=134, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=63, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:05.948 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:05.948 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9549, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:05.949 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9549,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=134, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=63, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.105 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=135, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=64, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.106 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:06.106 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=9324, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:06.107 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":9324,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=135, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=64, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.293 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=136, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=65, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.294 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:06.294 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3313, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:06.295 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3313,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=136, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=65, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.426 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=137, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=66, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.426 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:06.427 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6271, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:06.427 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6271,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=137, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=66, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.592 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=138, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=67, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.593 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:06.593 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=889, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:06.594 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":889,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=138, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=67, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.771 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=139, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=68, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.772 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:06.772 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=5904, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:06.773 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":5904,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=139, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=68, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.897 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=140, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=69, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:06.898 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:06.898 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=6772, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:06.899 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":6772,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=140, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=69, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:07.042 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: New message received = (Body:'{"custId":1,"totalPrice":0}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, correlationId=141, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=70, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
[INFO ] 2019-08-30 11:32:07.042 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Converted paymentRequest = PaymentRequest(custId=1, totalPrice=0)
[INFO ] 2019-08-30 11:32:07.043 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: debitCustomerFallback :: Blacklisted Customer Found paymentResponse = PaymentResponse(custId=1, totalPrice=3114, respCode=01, respMsg=INSUFFCIENT_BALANCE)
[INFO ] 2019-08-30 11:32:07.043 [paymentListenerContainer-1] LoggerSingleton - PaymentEventListener :: onMessage :: Final response = (Body:'{"custId":1,"totalPrice":3114,"respCode":"01","respMsg":"INSUFFCIENT_BALANCE"}' MessageProperties [headers={__TypeId__=com.saga.orchestrator.model.PaymentRequest}, type=PaymentResponse, correlationId=141, replyTo=payment-reply-exchange/payment-reply-routing-key, contentType=application/json, contentEncoding=UTF-8, contentLength=0, receivedDeliveryMode=PERSISTENT, priority=0, redelivered=false, receivedExchange=payment-request-exchange, receivedRoutingKey=payment-request-routing-key, deliveryTag=70, consumerTag=amq.ctag-mkqp06ndzBOIvo-xSGAu3w, consumerQueue=payment-request-queue])
